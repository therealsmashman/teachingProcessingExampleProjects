{"name":"Teaching Processing Example Projects","tagline":"A collection of simple projects used to teach programming in Processing, ","body":"This is a set of small stand alone programs in processing that written by beginner programmers.\r\n\r\n\r\nEach program is designed to be interesting and cover specific sections of programming.\r\n\r\n\r\n## dice\r\n\r\n\r\nDisplays a simple dice, that changes number automatically on a timer.\r\nIncludes some shaking animation.\r\n\r\n\r\n**Covers:** Random and switch statements. Includes manipulating the framerate of the animation, by changing the frameeate of the draw function.\r\n\r\n\r\n**Key concepts:**\r\n\r\n\r\nGetting the number to display on the dice:\r\n\r\n\r\n```\r\nnumber = (int)random(1, 7);\r\n```\r\n\r\n\r\nDrawing different dice faces depending on the number to be shown on the dice:\r\n\r\n\r\n```\r\nswitch(number) {\r\n  case 1: \r\n    ellipse(diceCenterHos, diceCenterVert, 20, 20);\r\n    break;\r\n  case 2:\r\n    ellipse(diceCenterHos -20, diceCenterVert, 20, 20);\r\n    ellipse(diceCenterHos +20, diceCenterVert, 20, 20);\r\n    break;\r\n    .....\r\n}\r\n```\r\n> \r\n\r\n\r\n## roll with button\r\n\r\n\r\nAn extension of the dice program, for students who have finished that early. Uses user input to trigger a new roll of the dice.\r\n\r\n**Covers:** User input, button section (collision detection on a circle).\r\n\r\n**Key concepts:**\r\n\r\n\r\nChecking whether the user has clicked on a button.\r\n\r\n\r\n```\r\nvoid mouseReleased() {\r\n  if(dist(mouseX, mouseY, buttonCenter, buttonCenter)< 50){\r\n    roll();\r\n  }\r\n}\r\n```\r\n\r\n***\r\n\r\n\r\n_Summaries of the rest of the projects coming soon!_","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}